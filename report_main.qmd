---
title: "Do Europe and Asia experience similar trends in Life Expectancy and Life Satisfaction?"
author: "Often Imitated, never depulicated"
format:
  pdf:
    toc: true
    number-sections: true
    fig-cap-location: bottom
    link-citations: true
execute:
  echo: false
---

# Executive Summary  
*(To be written after all parts are complete)*

# Introduction  


# Methodology  


# Results

@fig-trend-asia-europe presents population-weighted yearly averages of life satisfaction and life expectancy in Asia and Europe from 2011 to 2023. We use population-weighted averages because this method gives more weight to countries with larger populations. This approach provides a more accurate representation of how the average individual in each region experiences changes in their well-being and life expectancy.

Europe consistently reported higher levels for both indicators. Its life expectancy followed a steady upward trend until 2020, with a slight drop afterward, while life satisfaction showed stable growth throughout the period, with only a minor decrease in 2011. In contrast, Asia displayed more fluctuated trends, with a significant turning point in 2019 where both life satisfaction and life expectancy experienced notable changes.

The overall pattern shows that Europe has developed in a way where improvements in health align with steady satisfaction levels, while Asia shows a more uneven relationship. As shown in @fig-asia-europe-2011-2023, most countries have improved or maintained both indicators, but some Asian countries still lag in life satisfaction, suggesting a need for more balanced development that links well-being with longevity.

**This part should be deleted after merging**

```{r}
library(tidyverse)
library(ggplot2)
library(dplyr)
library(scales)
raw_data <- read_csv("life-satisfaction-vs-life-expectancy.csv")

region_map <- raw_data %>%
  filter(!is.na(`World regions according to OWID`)) %>%
  distinct(Entity, `World regions according to OWID`) %>%
  deframe() 

filled_region <- raw_data %>%
  mutate(
    `World regions according to OWID` = coalesce(
      `World regions according to OWID`,
      region_map[Entity]
    )
  )


cleaned <- filled_region %>%
  mutate(
    `Life expectancy (years)` = 
      `Life expectancy - Sex: all - Age: 0 - Variant: estimates`
  ) %>%
  select(-`Life expectancy - Sex: all - Age: 0 - Variant: estimates`) %>%
  filter(
    !is.na(`Life expectancy (years)`),
    !is.na(`Cantril ladder score`)
  )

cleaned %>%
  filter(`World regions according to OWID` %in% c("Europe", "Asia")) %>%
  write_csv("europe_asia.csv")
```

1. Calculate population-weighted regional averages

```{r}
# Load filtered dataset that includes only Europe and Asia
europe_asia <- read_csv("europe_asia.csv")

# Compute population-weighted yearly averages for each region
region_avg <- europe_asia %>%
  
  # Remove any missing values in key variables
  filter( 
    !is.na(`Life expectancy (years)`),
    !is.na(`Cantril ladder score`),
    !is.na(`Population (historical)`),
    !is.na(Year)
  ) %>%
  group_by(`World regions according to OWID`, Year) %>%
  summarise( 
    
    # Weighted mean life expectancy using historical population
    `Life expectancy (years)` = weighted.mean(
      `Life expectancy (years)`, `Population (historical)`, na.rm = TRUE),
    
    # Weighted mean life satisfaction using same population weights
    `Cantril ladder score` = weighted.mean(
      `Cantril ladder score`, `Population (historical)`, na.rm = TRUE),
    .groups = "drop"
  )
```

2. Plot trends and label final-year positions

```{r}
#| label: fig-trend-asia-europe
#| fig-cap: "Trajectory of Population-Weighted Life Satisfaction and Life Expectancy in Asia and Europe (2011â€“2023)"

# Identify the most recent year (2023) for each region to use as label position
label_data <- region_avg %>%
  group_by(`World regions according to OWID`) %>%
  filter(Year == max(Year)) %>%
  ungroup()

# Create line plot showing trend of weighted averages for Asia and Europe
ggplot(region_avg, aes(
  x = `Cantril ladder score`,
  y = `Life expectancy (years)`,
  group = `World regions according to OWID`,
  color = Year
)) +
  geom_path(linewidth = 1.2) +   # Line to show trajectory
  geom_point(size = 2) +         # Dots for each year
  scale_color_viridis_c() +      # Color gradient for year
  geom_text(                     
    data = label_data,           # Add region labels at final year
    aes(label = `World regions according to OWID`),
    color = "black",
    vjust = -1
  ) +
  
  # Add padding on x-axis and y-axis
  scale_x_continuous(expand = expansion(mult = c(0.05, 0.1))) + 
  scale_y_continuous(expand = expansion(mult = c(0.05, 0.1))) + 
  labs(
    title = "Yearly Averages: Life Satisfaction vs Life Expectancy",
    x = "Life Satisfaction (Cantril ladder score)",
    y = "Life Expectancy (years)",
    color = "Year"
  ) +
  scale_color_viridis_c(
  breaks = c(2011, 2014, 2017, 2020, 2023)  # Customize colorbar ticks
) +
  theme_minimal()
```

3. Comparison of 2011 and 2023

```{r}
#| label: fig-asia-europe-2011-2023
#| fig-cap: "Life Satisfaction and Life Expectancy in Asia and Europe (2011 vs 2023)"

# Filter dataset to include only the years 2011 and 2023 for comparison
filtered_2years <- europe_asia %>%
  filter(Year %in% c(2011, 2023))

# Create a faceted scatterplot comparing life satisfaction and life expectancy
ggplot(filtered_2years, aes(
  x = `Life expectancy (years)`,
  y = `Cantril ladder score`,
  color = `World regions according to OWID`,
  size = `Population (historical)`
)) +
  geom_point(alpha = 0.6) +          # Draw points with some transparency
  facet_wrap(~Year) +                # Create separate panels for each year
  scale_size(range = c(2, 10)) +     # Control range of point sizes
  scale_color_manual(values = c(     # Assign manual colors to regions
    "Asia" = "#1ABC9C",
    "Europe" = "#9B59B6"
  )) +
  labs(
    title = "Life Satisfaction and Life Expectancy (2011 vs 2023)",
    x = "Life Expectancy (Years)",
    y = "Life Satisfaction",
    color = "Region"
  ) +
  theme_minimal() +
  theme(                                  # Centered bold title
    plot.title = element_text(size = 12, face = "bold", hjust = 0.5),  
    plot.margin = margin(10, 10, 10, 10)  # Add margin around plot
  ) +
  guides(size = "none")       # Hide size legend to reduce clutter
```

# Discussion, Conclusion and Recommendations


# References  
